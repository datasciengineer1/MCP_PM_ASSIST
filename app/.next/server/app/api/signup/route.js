"use strict";(()=>{var e={};e.id=538,e.ids=[538],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},33179:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>w,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{POST:()=>c});var a=t(49303),n=t(88716),i=t(60670),o=t(87070),u=t(42023),p=t.n(u);let d=new(t(53524)).PrismaClient;async function c(e){try{let{email:r,password:t,name:s}=await e.json();if(!r||!t||!s)return o.NextResponse.json({error:"Email, password, and name are required"},{status:400});if(await d.user.findUnique({where:{email:r}}))return o.NextResponse.json({error:"User with this email already exists"},{status:400});let a=await p().hash(t,12),{password:n,...i}=await d.user.create({data:{email:r,name:s,password:a}});return o.NextResponse.json({message:"User created successfully",user:i},{status:201})}catch(e){return console.error("Signup error:",e),o.NextResponse.json({error:"Failed to create user"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/signup/route",pathname:"/api/signup",filename:"route",bundlePath:"app/api/signup/route"},resolvedPagePath:"/Users/ravinangara/Documents/PMASSIST_MCP/pm_assistant_mvpf/app/app/api/signup/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:x,serverHooks:g}=l,h="/api/signup/route";function w(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:x})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972,23],()=>t(33179));module.exports=s})();